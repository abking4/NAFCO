{"version":3,"file":"search.js","mappings":"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","sources":["webpack://nafco-site/webpack/bootstrap","webpack://nafco-site/./src/js/Gradient.js","webpack://nafco-site/webpack/runtime/publicPath","webpack://nafco-site/./node_modules/fuse.js/dist/fuse.mjs","webpack://nafco-site/./src/js/search.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","\n/*\n*   Stripe WebGl Gradient Animation\n*   All Credits to Stripe.com\n*   ScrollObserver functionality to disable animation when not scrolled into view has been disabled and \n*   commented out for now.\n*   https://kevinhufnagl.com\n*/\n\n\n//Converting colors to proper format\nfunction normalizeColor(hexCode) {\n  return [(hexCode >> 16 & 255) / 255, (hexCode >> 8 & 255) / 255, (255 & hexCode) / 255]\n} [\"SCREEN\", \"LINEAR_LIGHT\"].reduce((hexCode, t, n) => Object.assign(hexCode, {\n  [t]: n\n}), {});\n\n//Essential functionality of WebGl\n//t = width\n//n = height\nclass MiniGl {\n  constructor(canvas, width, height, debug = false) {\n      const _miniGl = this,\n          debug_output = -1 !== document.location.search.toLowerCase().indexOf(\"debug=webgl\");\n      _miniGl.canvas = canvas, _miniGl.gl = _miniGl.canvas.getContext(\"webgl\", {\n          antialias: true\n      }), _miniGl.meshes = [];\n      const context = _miniGl.gl;\n      width && height && this.setSize(width, height), _miniGl.lastDebugMsg, _miniGl.debug = debug && debug_output ? function(e) {\n          const t = new Date;\n          t - _miniGl.lastDebugMsg > 1e3 && console.log(\"---\"), console.log(t.toLocaleTimeString() + Array(Math.max(0, 32 - e.length)).join(\" \") + e + \": \", ...Array.from(arguments).slice(1)), _miniGl.lastDebugMsg = t\n      } : () => {}, Object.defineProperties(_miniGl, {\n          Material: {\n              enumerable: false,\n              value: class {\n                  constructor(vertexShaders, fragments, uniforms = {}) {\n                      const material = this;\n                      function getShaderByType(type, source) {\n                          const shader = context.createShader(type);\n                          return context.shaderSource(shader, source), context.compileShader(shader), context.getShaderParameter(shader, context.COMPILE_STATUS) || console.error(context.getShaderInfoLog(shader)), _miniGl.debug(\"Material.compileShaderSource\", {\n                              source: source\n                          }), shader\n                      }\n                      function getUniformVariableDeclarations(uniforms, type) {\n                          return Object.entries(uniforms).map(([uniform, value]) => value.getDeclaration(uniform, type)).join(\"\\n\")\n                      }\n                      material.uniforms = uniforms, material.uniformInstances = [];\n\n                      const prefix = \"\\n              precision highp float;\\n            \";\n                      material.vertexSource = `\\n              ${prefix}\\n              attribute vec4 position;\\n              attribute vec2 uv;\\n              attribute vec2 uvNorm;\\n              ${getUniformVariableDeclarations(_miniGl.commonUniforms,\"vertex\")}\\n              ${getUniformVariableDeclarations(uniforms,\"vertex\")}\\n              ${vertexShaders}\\n            `,\n                      material.Source = `\\n              ${prefix}\\n              ${getUniformVariableDeclarations(_miniGl.commonUniforms,\"fragment\")}\\n              ${getUniformVariableDeclarations(uniforms,\"fragment\")}\\n              ${fragments}\\n            `,\n                      material.vertexShader = getShaderByType(context.VERTEX_SHADER, material.vertexSource),\n                      material.fragmentShader = getShaderByType(context.FRAGMENT_SHADER, material.Source),\n                      material.program = context.createProgram(),\n                      context.attachShader(material.program, material.vertexShader),\n                      context.attachShader(material.program, material.fragmentShader),\n                      context.linkProgram(material.program),\n                      context.getProgramParameter(material.program, context.LINK_STATUS) || console.error(context.getProgramInfoLog(material.program)),\n                      context.useProgram(material.program),\n                      material.attachUniforms(void 0, _miniGl.commonUniforms),\n                      material.attachUniforms(void 0, material.uniforms)\n                  }\n                  //t = uniform\n                  attachUniforms(name, uniforms) {\n                      //n  = material\n                      const material = this;\n                      void 0 === name ? Object.entries(uniforms).forEach(([name, uniform]) => {\n                          material.attachUniforms(name, uniform)\n                      }) : \"array\" == uniforms.type ? uniforms.value.forEach((uniform, i) => material.attachUniforms(`${name}[${i}]`, uniform)) : \"struct\" == uniforms.type ? Object.entries(uniforms.value).forEach(([uniform, i]) => material.attachUniforms(`${name}.${uniform}`, i)) : (_miniGl.debug(\"Material.attachUniforms\", {\n                          name: name,\n                          uniform: uniforms\n                      }), material.uniformInstances.push({\n                          uniform: uniforms,\n                          location: context.getUniformLocation(material.program, name)\n                      }))\n                  }\n              }\n          },\n          Uniform: {\n              enumerable: !1,\n              value: class {\n                  constructor(e) {\n                      this.type = \"float\", Object.assign(this, e);\n                      this.typeFn = {\n                          float: \"1f\",\n                          int: \"1i\",\n                          vec2: \"2fv\",\n                          vec3: \"3fv\",\n                          vec4: \"4fv\",\n                          mat4: \"Matrix4fv\"\n                      } [this.type] || \"1f\", this.update()\n                  }\n                  update(value) {\n                      void 0 !== this.value && context[`uniform${this.typeFn}`](value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.transpose : this.value, 0 === this.typeFn.indexOf(\"Matrix\") ? this.value : null)\n                  }\n                  //e - name\n                  //t - type\n                  //n - length\n                  getDeclaration(name, type, length) {\n                      const uniform = this;\n                      if (uniform.excludeFrom !== type) {\n                          if (\"array\" === uniform.type) return uniform.value[0].getDeclaration(name, type, uniform.value.length) + `\\nconst int ${name}_length = ${uniform.value.length};`;\n                          if (\"struct\" === uniform.type) {\n                              let name_no_prefix = name.replace(\"u_\", \"\");\n                              return name_no_prefix = \n                                name_no_prefix.charAt(0).toUpperCase() + \n                                name_no_prefix.slice(1), \n                                `uniform struct ${name_no_prefix} \n                                {\\n` + \n                                Object.entries(uniform.value).map(([name, uniform]) => \n                                uniform.getDeclaration(name, type)\n                                .replace(/^uniform/, \"\"))\n                                .join(\"\") \n                                + `\\n} ${name}${length>0?`[${length}]`:\"\"};`\n                          }\n                          return `uniform ${uniform.type} ${name}${length>0?`[${length}]`:\"\"};`\n                      }\n                  }\n              }\n          },\n          PlaneGeometry: {\n              enumerable: !1,\n              value: class {\n                  constructor(width, height, n, i, orientation) {\n                    context.createBuffer(), this.attributes = {\n                          position: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 3\n                          }),\n                          uv: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 2\n                          }),\n                          uvNorm: new _miniGl.Attribute({\n                              target: context.ARRAY_BUFFER,\n                              size: 2\n                          }),\n                          index: new _miniGl.Attribute({\n                              target: context.ELEMENT_ARRAY_BUFFER,\n                              size: 3,\n                              type: context.UNSIGNED_SHORT\n                          })\n                      }, this.setTopology(n, i), this.setSize(width, height, orientation)\n                  }\n                  setTopology(e = 1, t = 1) {\n                      const n = this;\n                      n.xSegCount = e, n.ySegCount = t, n.vertexCount = (n.xSegCount + 1) * (n.ySegCount + 1), n.quadCount = n.xSegCount * n.ySegCount * 2, n.attributes.uv.values = new Float32Array(2 * n.vertexCount), n.attributes.uvNorm.values = new Float32Array(2 * n.vertexCount), n.attributes.index.values = new Uint16Array(3 * n.quadCount);\n                      for (let e = 0; e <= n.ySegCount; e++)\n                          for (let t = 0; t <= n.xSegCount; t++) {\n                              const i = e * (n.xSegCount + 1) + t;\n                              if (n.attributes.uv.values[2 * i] = t / n.xSegCount, n.attributes.uv.values[2 * i + 1] = 1 - e / n.ySegCount, n.attributes.uvNorm.values[2 * i] = t / n.xSegCount * 2 - 1, n.attributes.uvNorm.values[2 * i + 1] = 1 - e / n.ySegCount * 2, t < n.xSegCount && e < n.ySegCount) {\n                                  const s = e * n.xSegCount + t;\n                                  n.attributes.index.values[6 * s] = i, n.attributes.index.values[6 * s + 1] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 2] = i + 1, n.attributes.index.values[6 * s + 3] = i + 1, n.attributes.index.values[6 * s + 4] = i + 1 + n.xSegCount, n.attributes.index.values[6 * s + 5] = i + 2 + n.xSegCount\n                              }\n                          }\n                      n.attributes.uv.update(), n.attributes.uvNorm.update(), n.attributes.index.update(), _miniGl.debug(\"Geometry.setTopology\", {\n                          uv: n.attributes.uv,\n                          uvNorm: n.attributes.uvNorm,\n                          index: n.attributes.index\n                      })\n                  }\n                  setSize(width = 1, height = 1, orientation = \"xz\") {\n                      const geometry = this;\n                      geometry.width = width,\n                      geometry.height = height,\n                      geometry.orientation = orientation,\n                      geometry.attributes.position.values && geometry.attributes.position.values.length === 3 * geometry.vertexCount \n                      || (geometry.attributes.position.values = new Float32Array(3 * geometry.vertexCount));\n                      const o = width / -2,\n                          r = height / -2,\n                          segment_width = width / geometry.xSegCount,\n                          segment_height = height / geometry.ySegCount;\n                      for (let yIndex= 0; yIndex <= geometry.ySegCount; yIndex++) {\n                          const t = r + yIndex * segment_height;\n                          for (let xIndex = 0; xIndex <= geometry.xSegCount; xIndex++) {\n                              const r = o + xIndex * segment_width,\n                                  l = yIndex * (geometry.xSegCount + 1) + xIndex;\n                              geometry.attributes.position.values[3 * l + \"xyz\".indexOf(orientation[0])] = r, \n                              geometry.attributes.position.values[3 * l + \"xyz\".indexOf(orientation[1])] = -t\n                          }\n                      }\n                      geometry.attributes.position.update(), _miniGl.debug(\"Geometry.setSize\", {\n                          position: geometry.attributes.position\n                      })\n                  }\n              }\n          },\n          Mesh: {\n              enumerable: !1,\n              value: class {\n                  constructor(geometry, material) {\n                      const mesh = this;\n                      mesh.geometry = geometry, mesh.material = material, mesh.wireframe = !1, mesh.attributeInstances = [], Object.entries(mesh.geometry.attributes).forEach(([e, attribute]) => {\n                          mesh.attributeInstances.push({\n                              attribute: attribute,\n                              location: attribute.attach(e, mesh.material.program)\n                          })\n                      }), _miniGl.meshes.push(mesh), _miniGl.debug(\"Mesh.constructor\", {\n                          mesh: mesh\n                      })\n                  }\n                  draw() {\n                    context.useProgram(this.material.program), this.material.uniformInstances.forEach(({\n                          uniform: e,\n                          location: t\n                      }) => e.update(t)), this.attributeInstances.forEach(({\n                          attribute: e,\n                          location: t\n                      }) => e.use(t)), context.drawElements(this.wireframe ? context.LINES : context.TRIANGLES, this.geometry.attributes.index.values.length, context.UNSIGNED_SHORT, 0)\n                  }\n                  remove() {\n                      _miniGl.meshes = _miniGl.meshes.filter(e => e != this)\n                  }\n              }\n          },\n          Attribute: {\n              enumerable: !1,\n              value: class {\n                  constructor(e) {\n                      this.type = context.FLOAT, this.normalized = !1, this.buffer = context.createBuffer(), Object.assign(this, e), this.update()\n                  }\n                  update() {\n                      void 0 !== this.values && (context.bindBuffer(this.target, this.buffer), context.bufferData(this.target, this.values, context.STATIC_DRAW))\n                  }\n                  attach(e, t) {\n                      const n = context.getAttribLocation(t, e);\n                      return this.target === context.ARRAY_BUFFER && (context.enableVertexAttribArray(n), context.vertexAttribPointer(n, this.size, this.type, this.normalized, 0, 0)), n\n                  }\n                  use(e) {\n                    context.bindBuffer(this.target, this.buffer), this.target === context.ARRAY_BUFFER && (context.enableVertexAttribArray(e), context.vertexAttribPointer(e, this.size, this.type, this.normalized, 0, 0))\n                  }\n              }\n          }\n      });\n      const a = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n      _miniGl.commonUniforms = {\n          projectionMatrix: new _miniGl.Uniform({\n              type: \"mat4\",\n              value: a\n          }),\n          modelViewMatrix: new _miniGl.Uniform({\n              type: \"mat4\",\n              value: a\n          }),\n          resolution: new _miniGl.Uniform({\n              type: \"vec2\",\n              value: [1, 1]\n          }),\n          aspectRatio: new _miniGl.Uniform({\n              type: \"float\",\n              value: 1\n          })\n      }\n  }\n  setSize(e = 640, t = 480) {\n      this.width = e, this.height = t, this.canvas.width = e, this.canvas.height = t, this.gl.viewport(0, 0, e, t), this.commonUniforms.resolution.value = [e, t], this.commonUniforms.aspectRatio.value = e / t, this.debug(\"MiniGL.setSize\", {\n          width: e,\n          height: t\n      })\n  }\n  //left, right, top, bottom, near, far\n  setOrthographicCamera(e = 0, t = 0, n = 0, i = -2e3, s = 2e3) {\n      this.commonUniforms.projectionMatrix.value = [2 / this.width, 0, 0, 0, 0, 2 / this.height, 0, 0, 0, 0, 2 / (i - s), 0, e, t, n, 1], this.debug(\"setOrthographicCamera\", this.commonUniforms.projectionMatrix.value)\n  }\n  render() {\n      this.gl.clearColor(0, 0, 0, 0), this.gl.clearDepth(1), this.meshes.forEach(e => e.draw())\n  }\n}\n\n\n\n//Sets initial properties\nfunction e(object, propertyName, val) {\n  return propertyName in object ? Object.defineProperty(object, propertyName, {\n      value: val,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n  }) : object[propertyName] = val, object\n}\n\n//Gradient object\nclass Gradient {\n  constructor(...t) {\n      e(this, \"el\", void 0), e(this, \"cssVarRetries\", 0), e(this, \"maxCssVarRetries\", 200), e(this, \"angle\", 0), e(this, \"isLoadedClass\", !1), e(this, \"isScrolling\", !1), /*e(this, \"isStatic\", o.disableAmbientAnimations()),*/ e(this, \"scrollingTimeout\", void 0), e(this, \"scrollingRefreshDelay\", 200), e(this, \"isIntersecting\", !1), e(this, \"shaderFiles\", void 0), e(this, \"vertexShader\", void 0), e(this, \"sectionColors\", void 0), e(this, \"computedCanvasStyle\", void 0), e(this, \"conf\", void 0), e(this, \"uniforms\", void 0), e(this, \"t\", 1253106), e(this, \"last\", 0), e(this, \"width\", void 0), e(this, \"minWidth\", 1111), e(this, \"height\", 600), e(this, \"xSegCount\", void 0), e(this, \"ySegCount\", void 0), e(this, \"mesh\", void 0), e(this, \"material\", void 0), e(this, \"geometry\", void 0), e(this, \"minigl\", void 0), e(this, \"scrollObserver\", void 0), e(this, \"amp\", 320), e(this, \"seed\", 5), e(this, \"freqX\", 14e-5), e(this, \"freqY\", 29e-5), e(this, \"freqDelta\", 1e-5), e(this, \"activeColors\", [1, 1, 1, 1]), e(this, \"isMetaKey\", !1), e(this, \"isGradientLegendVisible\", !1), e(this, \"isMouseDown\", !1), e(this, \"handleScroll\", () => {\n          clearTimeout(this.scrollingTimeout), this.scrollingTimeout = setTimeout(this.handleScrollEnd, this.scrollingRefreshDelay), this.isGradientLegendVisible && this.hideGradientLegend(), this.conf.playing && (this.isScrolling = !0, this.pause())\n      }), e(this, \"handleScrollEnd\", () => {\n          this.isScrolling = !1, this.isIntersecting && this.play()\n      }), e(this, \"resize\", () => {\n          this.width = window.innerWidth, this.minigl.setSize(this.width, this.height), this.minigl.setOrthographicCamera(), this.xSegCount = Math.ceil(this.width * this.conf.density[0]), this.ySegCount = Math.ceil(this.height * this.conf.density[1]), this.mesh.geometry.setTopology(this.xSegCount, this.ySegCount), this.mesh.geometry.setSize(this.width, this.height), this.mesh.material.uniforms.u_shadow_power.value = this.width < 600 ? 5 : 6\n      }), e(this, \"handleMouseDown\", e => {\n          this.isGradientLegendVisible && (this.isMetaKey = e.metaKey, this.isMouseDown = !0, !1 === this.conf.playing && requestAnimationFrame(this.animate))\n      }), e(this, \"handleMouseUp\", () => {\n          this.isMouseDown = !1\n      }), e(this, \"animate\", e => {\n          if (!this.shouldSkipFrame(e) || this.isMouseDown) {\n              if (this.t += Math.min(e - this.last, 1e3 / 15), this.last = e, this.isMouseDown) {\n                  let e = 160;\n                  this.isMetaKey && (e = -160), this.t += e\n              }\n              this.mesh.material.uniforms.u_time.value = this.t, this.minigl.render()\n\n          }\n          if (0 !== this.last && this.isStatic) return this.minigl.render(), void this.disconnect();\n          (/*this.isIntersecting && */this.conf.playing || this.isMouseDown) && requestAnimationFrame(this.animate)\n      }), e(this, \"addIsLoadedClass\", () => {\n          /*this.isIntersecting && */!this.isLoadedClass && (this.isLoadedClass = !0, this.el.classList.add(\"isLoaded\"), setTimeout(() => {\n              this.el.parentElement.classList.add(\"isLoaded\")\n          }, 3e3))\n      }), e(this, \"pause\", () => {\n          this.conf.playing = false\n      }), e(this, \"play\", () => {\n          requestAnimationFrame(this.animate), this.conf.playing = true\n      }), e(this,\"initGradient\", (selector) => {\n        this.el = document.querySelector(selector);\n        this.connect();\n        return this;\n      })\n  }\n  async connect() {\n      this.shaderFiles = {\n          vertex: \"varying vec3 v_color;\\n\\nvoid main() {\\n  float time = u_time * u_global.noiseSpeed;\\n\\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\\n\\n  vec2 st = 1. - uvNorm.xy;\\n\\n  //\\n  // Tilting the plane\\n  //\\n\\n  // Front-to-back tilt\\n  float tilt = resolution.y / 2.0 * uvNorm.y;\\n\\n  // Left-to-right angle\\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\\n\\n  // Up-down shift to offset incline\\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\\n\\n  //\\n  // Vertex noise\\n  //\\n\\n  float noise = snoise(vec3(\\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\\n  )) * u_vertDeform.noiseAmp;\\n\\n  // Fade noise to zero at edges\\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\\n\\n  // Clamp to 0\\n  noise = max(0.0, noise);\\n\\n  vec3 pos = vec3(\\n    position.x,\\n    position.y + tilt + incline + noise - offset,\\n    position.z\\n  );\\n\\n  //\\n  // Vertex color, to be passed to fragment shader\\n  //\\n\\n  if (u_active_colors[0] == 1.) {\\n    v_color = u_baseColor;\\n  }\\n\\n  for (int i = 0; i < u_waveLayers_length; i++) {\\n    if (u_active_colors[i + 1] == 1.) {\\n      WaveLayers layer = u_waveLayers[i];\\n\\n      float noise = smoothstep(\\n        layer.noiseFloor,\\n        layer.noiseCeil,\\n        snoise(vec3(\\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\\n          noiseCoord.y * layer.noiseFreq.y,\\n          time * layer.noiseSpeed + layer.noiseSeed\\n        )) / 2.0 + 0.5\\n      );\\n\\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\\n    }\\n  }\\n\\n  //\\n  // Finish\\n  //\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\\n}\",\n          noise: \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n    return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n}\",\n          blend: \"//\\n// https://github.com/jamieowen/glsl-blend\\n//\\n\\n// Normal\\n\\nvec3 blendNormal(vec3 base, vec3 blend) {\\n\\treturn blend;\\n}\\n\\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Screen\\n\\nfloat blendScreen(float base, float blend) {\\n\\treturn 1.0-((1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend) {\\n\\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\\n}\\n\\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Multiply\\n\\nvec3 blendMultiply(vec3 base, vec3 blend) {\\n\\treturn base*blend;\\n}\\n\\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Overlay\\n\\nfloat blendOverlay(float base, float blend) {\\n\\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend) {\\n\\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\\n}\\n\\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Hard light\\n\\nvec3 blendHardLight(vec3 base, vec3 blend) {\\n\\treturn blendOverlay(blend,base);\\n}\\n\\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Soft light\\n\\nfloat blendSoftLight(float base, float blend) {\\n\\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color dodge\\n\\nfloat blendColorDodge(float base, float blend) {\\n\\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\\n}\\n\\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Color burn\\n\\nfloat blendColorBurn(float base, float blend) {\\n\\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend) {\\n\\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\\n}\\n\\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Vivid Light\\n\\nfloat blendVividLight(float base, float blend) {\\n\\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\\n}\\n\\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Lighten\\n\\nfloat blendLighten(float base, float blend) {\\n\\treturn max(blend,base);\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\\n}\\n\\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear burn\\n\\nfloat blendLinearBurn(float base, float blend) {\\n\\t// Note : Same implementation as BlendSubtractf\\n\\treturn max(base+blend-1.0,0.0);\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendSubtract\\n\\treturn max(base+blend-vec3(1.0),vec3(0.0));\\n}\\n\\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear dodge\\n\\nfloat blendLinearDodge(float base, float blend) {\\n\\t// Note : Same implementation as BlendAddf\\n\\treturn min(base+blend,1.0);\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\\n\\t// Note : Same implementation as BlendAdd\\n\\treturn min(base+blend,vec3(1.0));\\n}\\n\\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\\n}\\n\\n// Linear light\\n\\nfloat blendLinearLight(float base, float blend) {\\n\\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend) {\\n\\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\\n}\\n\\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\\n\\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\\n}\",\n          fragment: \"varying vec3 v_color;\\n\\nvoid main() {\\n  vec3 color = v_color;\\n  if (u_darken_top == 1.0) {\\n    vec2 st = gl_FragCoord.xy/resolution.xy;\\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\\n  }\\n  gl_FragColor = vec4(color, 1.0);\\n}\"\n      },\n      this.conf = {\n          presetName: \"\",\n          wireframe: false,\n          density: [.06, .16],\n          zoom: 1,\n          rotation: 0,\n          playing: true\n      }, \n      document.querySelectorAll(\"canvas\").length < 1 ? console.log(\"DID NOT LOAD HERO STRIPE CANVAS\") : (\n        \n        this.minigl = new MiniGl(this.el, null, null, !0), \n        requestAnimationFrame(() => {\n            this.el && (this.computedCanvasStyle = getComputedStyle(this.el), this.waitForCssVars())\n        })\n        /*\n        this.scrollObserver = await s.create(.1, !1),\n        this.scrollObserver.observe(this.el),\n        this.scrollObserver.onSeparate(() => {\n            window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !1, this.conf.playing && this.pause()\n        }), \n        this.scrollObserver.onIntersect(() => {\n            window.addEventListener(\"scroll\", this.handleScroll), window.addEventListener(\"mousedown\", this.handleMouseDown), window.addEventListener(\"mouseup\", this.handleMouseUp), window.addEventListener(\"keydown\", this.handleKeyDown), this.isIntersecting = !0, this.addIsLoadedClass(), this.play()\n        })*/\n\n      )\n  }\n  disconnect() {\n      this.scrollObserver && (window.removeEventListener(\"scroll\", this.handleScroll), window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"mouseup\", this.handleMouseUp), window.removeEventListener(\"keydown\", this.handleKeyDown), this.scrollObserver.disconnect()), window.removeEventListener(\"resize\", this.resize)\n  }\n  initMaterial() {\n      this.uniforms = {\n          u_time: new this.minigl.Uniform({\n              value: 0\n          }),\n          u_shadow_power: new this.minigl.Uniform({\n              value: 5\n          }),\n          u_darken_top: new this.minigl.Uniform({\n              value: \"\" === this.el.dataset.jsDarkenTop ? 1 : 0\n          }),\n          u_active_colors: new this.minigl.Uniform({\n              value: this.activeColors,\n              type: \"vec4\"\n          }),\n          u_global: new this.minigl.Uniform({\n              value: {\n                  noiseFreq: new this.minigl.Uniform({\n                      value: [this.freqX, this.freqY],\n                      type: \"vec2\"\n                  }),\n                  noiseSpeed: new this.minigl.Uniform({\n                      value: 5e-6\n                  })\n              },\n              type: \"struct\"\n          }),\n          u_vertDeform: new this.minigl.Uniform({\n              value: {\n                  incline: new this.minigl.Uniform({\n                      value: Math.sin(this.angle) / Math.cos(this.angle)\n                  }),\n                  offsetTop: new this.minigl.Uniform({\n                      value: -.5\n                  }),\n                  offsetBottom: new this.minigl.Uniform({\n                      value: -.5\n                  }),\n                  noiseFreq: new this.minigl.Uniform({\n                      value: [3, 4],\n                      type: \"vec2\"\n                  }),\n                  noiseAmp: new this.minigl.Uniform({\n                      value: this.amp\n                  }),\n                  noiseSpeed: new this.minigl.Uniform({\n                      value: 10\n                  }),\n                  noiseFlow: new this.minigl.Uniform({\n                      value: 3\n                  }),\n                  noiseSeed: new this.minigl.Uniform({\n                      value: this.seed\n                  })\n              },\n              type: \"struct\",\n              excludeFrom: \"fragment\"\n          }),\n          u_baseColor: new this.minigl.Uniform({\n              value: this.sectionColors[0],\n              type: \"vec3\",\n              excludeFrom: \"fragment\"\n          }),\n          u_waveLayers: new this.minigl.Uniform({\n              value: [],\n              excludeFrom: \"fragment\",\n              type: \"array\"\n          })\n      };\n      for (let e = 1; e < this.sectionColors.length; e += 1) this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({\n          value: {\n              color: new this.minigl.Uniform({\n                  value: this.sectionColors[e],\n                  type: \"vec3\"\n              }),\n              noiseFreq: new this.minigl.Uniform({\n                  value: [2 + e / this.sectionColors.length, 3 + e / this.sectionColors.length],\n                  type: \"vec2\"\n              }),\n              noiseSpeed: new this.minigl.Uniform({\n                  value: 11 + .3 * e\n              }),\n              noiseFlow: new this.minigl.Uniform({\n                  value: 6.5 + .3 * e\n              }),\n              noiseSeed: new this.minigl.Uniform({\n                  value: this.seed + 10 * e\n              }),\n              noiseFloor: new this.minigl.Uniform({\n                  value: .1\n              }),\n              noiseCeil: new this.minigl.Uniform({\n                  value: .63 + .07 * e\n              })\n          },\n          type: \"struct\"\n      }));\n      return this.vertexShader = [this.shaderFiles.noise, this.shaderFiles.blend, this.shaderFiles.vertex].join(\"\\n\\n\"), new this.minigl.Material(this.vertexShader, this.shaderFiles.fragment, this.uniforms)\n  }\n  initMesh() {\n      this.material = this.initMaterial(), this.geometry = new this.minigl.PlaneGeometry, this.mesh = new this.minigl.Mesh(this.geometry, this.material)\n  }\n  shouldSkipFrame(e) {\n      return !!window.document.hidden || (!this.conf.playing || (parseInt(e, 10) % 2 == 0 || void 0))\n  }\n  updateFrequency(e) {\n      this.freqX += e, this.freqY += e\n  }\n  toggleColor(index) {\n      this.activeColors[index] = 0 === this.activeColors[index] ? 1 : 0\n  }\n  showGradientLegend() {\n      this.width > this.minWidth && (this.isGradientLegendVisible = !0, document.body.classList.add(\"isGradientLegendVisible\"))\n  }\n  hideGradientLegend() {\n      this.isGradientLegendVisible = !1, document.body.classList.remove(\"isGradientLegendVisible\")\n  }\n  init() {\n      this.initGradientColors(), this.initMesh(), this.resize(), requestAnimationFrame(this.animate), window.addEventListener(\"resize\", this.resize)\n  }\n  /*\n  * Waiting for the css variables to become available, usually on page load before we can continue.\n  * Using default colors assigned below if no variables have been found after maxCssVarRetries\n  */\n  waitForCssVars() {\n      if (this.computedCanvasStyle && -1 !== this.computedCanvasStyle.getPropertyValue(\"--gradient-color-1\").indexOf(\"#\")) this.init(), this.addIsLoadedClass();\n      else {\n          if (this.cssVarRetries += 1, this.cssVarRetries > this.maxCssVarRetries) {\n              return this.sectionColors = [16711680, 16711680, 16711935, 65280, 255],void this.init();\n          }\n          requestAnimationFrame(() => this.waitForCssVars())\n      }\n  }\n  /*\n  * Initializes the four section colors by retrieving them from css variables.\n  */\n  initGradientColors() {\n      this.sectionColors = [\"--gradient-color-1\", \"--gradient-color-2\", \"--gradient-color-3\", \"--gradient-color-4\"].map(cssPropertyName => {\n          let hex = this.computedCanvasStyle.getPropertyValue(cssPropertyName).trim();\n          //Check if shorthand hex value was used and double the length so the conversion in normalizeColor will work.\n          if (4 === hex.length) {\n              const hexTemp = hex.substr(1).split(\"\").map(hexTemp => hexTemp + hexTemp).join(\"\");\n              hex = `#${hexTemp}`\n          }\n          return hex && `0x${hex.substr(1)}`\n      }).filter(Boolean).map(normalizeColor)\n  }\n}\n\n\n\n\n/*\n*Finally initializing the Gradient class, assigning a canvas to it and calling Gradient.connect() which initializes everything,\n* Use Gradient.pause() and Gradient.play() for controls.\n*\n* Here are some default property values you can change anytime:\n* Amplitude:    Gradient.amp = 0\n* Colors:       Gradient.sectionColors (if you change colors, use normalizeColor(#hexValue)) before you assign it.\n*\n*\n* Useful functions\n* Gradient.toggleColor(index)\n* Gradient.updateFrequency(freq)\n*/\n\nexport { Gradient }","__webpack_require__.p = \"./\";","/**\n * Fuse.js v7.1.0 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2025 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When `true`, the algorithm will ignore diacritics (accents) in comparisons\n  ignoreDiacritics: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nconst stripDiacritics = String.prototype.normalize\n    ? ((str) => str.normalize('NFD').replace(/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/g, ''))\n    : ((str) => str);\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, ignoreDiacritics, includeMatches } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      ignoreDiacritics,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive, ignoreDiacritics } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '7.1.0';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","import { Gradient } from './Gradient.js'\n\n// Create your instance\nconst gradient = new Gradient()\n\n// Call `initGradient` with the selector to your canvas\ngradient.initGradient('#gradient-canvas')\n\nimport '../css/navbar.css';\nimport '../css/search.css';\n\nimport Fuse from \"fuse.js\";\nimport searchData from '../assets/search-data.json';\nimport fallbackImage from \"../assets/images/fallback.jpg\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const input = document.getElementById(\"search-input\");\n  const resultsContainer = document.getElementById(\"results-container\");\n\n  // Fuse.js config\n  const fuse = new Fuse(searchData, {\n    keys: [\"title\", \"keywords\"],\n    threshold: 0.3,\n  });\n\n  const renderResults = (results) => {\n    resultsContainer.innerHTML = \"\";\n\n    if (results.length === 0) {\n      resultsContainer.innerHTML = \"<p>No matches found.</p>\";\n      return;\n    }\n\n    results.forEach(({ item }) => {\n      const resultEl = document.createElement(\"div\");\n      resultEl.classList.add(\"search-result\");\n\n      resultEl.innerHTML = `\n        <div class=\"result-text\">\n          <a href=\"${item.url}\" class=\"result-title\">${item.title}</a>\n        </div>\n        <div class=\"result-image\">\n          <img src=\"${item.image || fallbackImage}\" alt=\"${item.title}\" />\n        </div>\n      `;\n\n      resultsContainer.appendChild(resultEl);\n    });\n  };\n\n  // Initial render\n  renderResults(searchData.map(item => ({ item })));\n\n  input.addEventListener(\"input\", () => {\n    const query = input.value.trim();\n    const results = query ? fuse.search(query) : searchData.map(item => ({ item }));\n    renderResults(results);\n  });\n});\n"],"names":["__webpack_require__","normalizeColor","hexCode","p","reduce","t","n","Object","assign","MiniGl","constructor","canvas","width","height","debug","_miniGl","this","debug_output","document","location","search","toLowerCase","indexOf","gl","getContext","antialias","meshes","context","setSize","lastDebugMsg","e","Date","console","log","toLocaleTimeString","Array","Math","max","length","join","from","arguments","slice","defineProperties","Material","enumerable","value","vertexShaders","fragments","uniforms","material","getShaderByType","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","getUniformVariableDeclarations","entries","map","uniform","getDeclaration","uniformInstances","prefix","vertexSource","commonUniforms","Source","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","attachUniforms","name","forEach","i","push","getUniformLocation","Uniform","typeFn","float","int","vec2","vec3","vec4","mat4","update","transpose","excludeFrom","name_no_prefix","replace","charAt","toUpperCase","PlaneGeometry","orientation","createBuffer","attributes","position","Attribute","target","ARRAY_BUFFER","size","uv","uvNorm","index","ELEMENT_ARRAY_BUFFER","UNSIGNED_SHORT","setTopology","xSegCount","ySegCount","vertexCount","quadCount","values","Float32Array","Uint16Array","s","geometry","o","r","segment_width","segment_height","yIndex","xIndex","l","Mesh","mesh","wireframe","attributeInstances","attribute","attach","draw","use","drawElements","LINES","TRIANGLES","remove","filter","FLOAT","normalized","buffer","bindBuffer","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","a","projectionMatrix","modelViewMatrix","resolution","aspectRatio","viewport","setOrthographicCamera","render","clearColor","clearDepth","object","propertyName","val","defineProperty","configurable","writable","isArray","getTag","isString","isNumber","isObject","isDefined","isBlank","trim","undefined","prototype","toString","call","hasOwn","hasOwnProperty","KeyStore","keys","_keys","_keyMap","totalWeight","key","obj","createKey","id","weight","get","keyId","toJSON","JSON","stringify","path","src","getFn","createKeyPath","createKeyId","Error","INVALID_KEY_WEIGHT_VALUE","split","Config","isCaseSensitive","ignoreDiacritics","includeScore","shouldSort","sortFn","b","score","idx","includeMatches","findAllMatches","minMatchCharLength","threshold","distance","useExtendedSearch","list","arr","deepGet","isObjectLike","isBoolean","result","baseToString","len","ignoreLocation","ignoreFieldNorm","fieldNormWeight","SPACE","FuseIndex","norm","mantissa","cache","Map","m","pow","numTokens","match","has","parseFloat","round","set","clear","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","create","doc","docIndex","_addString","_addObject","add","removeAt","splice","getValueForItemAtKeyId","item","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","MAX_BITS","createPatternAlphabet","mask","char","stripDiacritics","String","normalize","str","BitapSearch","options","chunks","addChunk","startIndex","alphabet","remainder","end","substr","searchIn","text","isMatch","indices","allIndices","totalScore","hasMatches","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","binMin","binMid","floor","start","finish","bitArr","j","charMatch","matchmask","convertMaskToIndices","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","FuzzyMatch","super","_bitapSearch","IncludeMatch","searchers","startsWith","endsWith","searchersLen","SPACE_RE","MultiMatchSet","Set","registeredSearchers","createSearcher","searcherClass","condition","LogicalOperator","KeyType","isExpression","query","convertToExplicit","parse","auto","next","isQueryPath","isPath","isLeaf","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","searcher","node","children","operator","transformMatches","data","refIndex","transformScore","Fuse","_keyStore","setCollection","_docs","_myIndex","predicate","results","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","Number","EPSILON","computeScore","sort","transformers","transformer","format","expression","evaluate","_findMatches","res","child","resultMap","expResults","version","parseIndex","config","parseQuery","args","register","queryItem","found","token","_","numMatches","qLen","pLen","clearTimeout","scrollingTimeout","setTimeout","handleScrollEnd","scrollingRefreshDelay","isGradientLegendVisible","hideGradientLegend","conf","playing","isScrolling","pause","isIntersecting","play","window","innerWidth","minigl","ceil","density","u_shadow_power","isMetaKey","metaKey","isMouseDown","requestAnimationFrame","animate","shouldSkipFrame","last","u_time","isStatic","disconnect","isLoadedClass","el","classList","parentElement","selector","querySelector","connect","shaderFiles","vertex","noise","blend","fragment","presetName","zoom","rotation","querySelectorAll","computedCanvasStyle","getComputedStyle","waitForCssVars","scrollObserver","removeEventListener","handleScroll","handleMouseDown","handleMouseUp","handleKeyDown","resize","initMaterial","u_darken_top","dataset","jsDarkenTop","u_active_colors","activeColors","u_global","noiseFreq","freqX","freqY","noiseSpeed","u_vertDeform","incline","sin","angle","cos","offsetTop","offsetBottom","noiseAmp","amp","noiseFlow","noiseSeed","seed","u_baseColor","sectionColors","u_waveLayers","color","noiseFloor","noiseCeil","initMesh","hidden","parseInt","updateFrequency","toggleColor","showGradientLegend","minWidth","body","init","initGradientColors","addEventListener","getPropertyValue","addIsLoadedClass","cssVarRetries","maxCssVarRetries","cssPropertyName","hex","hexTemp","Boolean","initGradient","input","getElementById","resultsContainer","fuse","renderResults","innerHTML","resultEl","createElement","url","title","image","appendChild"],"sourceRoot":""}